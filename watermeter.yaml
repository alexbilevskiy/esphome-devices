esphome:
  name: watermeter
  friendly_name: watermeter
  on_boot:
    priority: 500
    then:
      - pulse_counter.set_total_pulses:
          id: water_counter
          value: !lambda "return id(global_water_counter) / 1 * 2280;"
  on_shutdown:
    then:
      - globals.set:
          id: global_water_counter
          value: !lambda 'return id(water_total).state;'

esp32:
  board: lolin_s2_mini
  variant: esp32s2
  framework:
    type: esp-idf


logger:
  baud_rate: 0

api:
  password: ""
ota:
  platform: esphome
  password: ""
safe_mode:
  disabled: true

preferences:
  flash_write_interval: 15s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

globals:
  - id: global_water_counter
    type: float
    restore_value: yes

button:
  - platform: template
    name: "Reset volume"
    entity_category: "config"
    on_press:
      - pulse_counter.set_total_pulses:
          id: water_counter
          value: 0
      - globals.set:
          id: global_water_counter
          value: '0.0'

#  - platform: template
#    name: "log"
#    entity_category: "config"
#    on_press:
#      - lambda: 'ESP_LOGD("XXX", "%0.2f: %0.2f", id(global_water_counter), id(water_total).state);'
  - platform: restart
    name: "Reboot"

sensor:
  - platform: pulse_counter
    pin:
      number: GPIO16 #2280/L
      inverted: false
      mode: INPUT
    update_interval: 1s
    name: "Filtered water flow"
    icon: "mdi:water-sync"
    accuracy_decimals: 2
    device_class: volume_flow_rate
    id: water_counter
    unit_of_measurement: "L/min"
    filters:
      - lambda: return (x * 1 / 2280);
    total:
      device_class: water
      unit_of_measurement: 'L'
      name: 'Filtered water usage'
      icon: "mdi:water"
      accuracy_decimals: 2
      id: water_total
      filters:
      - lambda: return (x * 1 / 2280);
      on_value:
        - if:
            condition:
              - lambda: 'return id(water_total).state > 0;'
            then:
              - globals.set:
                  id: global_water_counter
                  value: !lambda 'return id(water_total).state;'

  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s
  - platform: internal_temperature
    name: "Internal Temperature"

light:
  - platform: binary
    id: indicator_light
    name: "Indicator"
    output: indicator_output
    restore_mode: ALWAYS_ON

output:
  - id: indicator_output
    platform: gpio
    pin:
      number: GPIO15
    inverted: false

