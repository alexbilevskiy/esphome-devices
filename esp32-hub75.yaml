esphome:
  name: esp32-hub75
  friendly_name: esp32-hub75

esp32:
  board: lolin_s2_mini
  variant: esp32s2
  framework:
    type: arduino

external_components:
  - source: github://TillFleisch/ESPHome-HUB75-MatrixDisplayWrapper@v2.0.1
  - source: github://pr#6363
    refresh: 30d
    components: [lvgl]

logger:

api:
  password: ""
ota:
  safe_mode: false
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

time:
  - platform: sntp
    id: esptime
    timezone: Europe/Moscow

#lvgl:
#  displays:
#    - display_id: matrix
#  pages:
#    - id: main_page
#      widgets:
#        - label:
#            align: CENTER
#            text: 'Hello World!'

font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto
    size: 5
  - file: "fonts/4x6.bdf"
    id: f4x6
    size: 6
  - file: "fonts/5x8.bdf"
    id: f5x8
    size: 8
  - file: "fonts/10x20.bdf"
    id: f10x20
    size: 20
#  - file: "fonts/win_crox5h.bdf"
#    id: win
#    size: 18
#  - file: "fonts/helvR08.bdf"
#    id: helv
#    size: 8
#  - file: "fonts/b10.bdf"
#    id: b10
#    size: 6

display:
  - platform: hub75_matrix_display
    id: matrix
    width: 64
    height: 32
    chain_length: 1
    brightness: 10
    update_interval: 15s
    auto_clear_enabled: false
    R1_pin: GPIO40
    G1_pin: GPIO39
    B1_pin: GPIO38
    R2_pin: GPIO37
    G2_pin: GPIO36
    B2_pin: GPIO35
    A_pin: GPIO34
    B_pin: GPIO33
    C_pin: GPIO21
    D_pin: GPIO18
    #E_pin: GPIO-1
    LAT_pin: GPIO16
    OE_pin: GPIO15
    CLK_pin: GPIO17
    #driver:
    #i2sspeed:
    #latch_blanking:
    #clock_phase:
    #use_custom_library:

#    lambda: |-
#      //it.printf(0, 0, id(f4x6), "%.0f° outside", id(ya_fact).state);
#
#      //it.printf(0, 0, id(roboto), "%.0f°", id(ya_fact).state);
#      //it.print(0, 0, id(f4x6), "Hello World!");
#
#
#
#      //it.print(0, 7, id(f5x8), "Hello World!");
#
#      it.printf(1, 1, id(f4x6), "%.1fL %.0f°", id(r4s_volume).state, id(r4s_temp).state);
#      it.printf(1, 7, id(f4x6), "%.0fkW", id(main_power).state);
#
#      //it.strftime(0, 12, id(f10x20), "%H", id(esptime).now());
#      //it.strftime(20, 12, id(f10x20), "%M", id(esptime).now());
#      //it.strftime(40, 12, id(f10x20), "%S", id(esptime).now());
#
#      it.strftime(56, 26, id(f4x6), "%S", id(esptime).now());
#
#      //it.print(0, 12, id(f10x20), "11234");

switch:
  - platform: hub75_matrix_display
    matrix_id: matrix
    name: "Power"
    id: power
    restore_mode: ALWAYS_ON

number:
  - platform: hub75_matrix_display
    matrix_id: matrix
    name: "Brightness"


button:
  - platform: restart
    name: Restart
    entity_category: diagnostic

sensor:
  - platform: uptime
    name: Uptime

  - platform: homeassistant
    name: "yandex fact temp"
    entity_id: sensor.temperature_fact
    id: ya_fact
  - platform: homeassistant
    name: "kettle volume"
    entity_id: sensor.r4s_gate_water_volume
    id: r4s_volume
  - platform: homeassistant
    name: "kettle temp"
    entity_id: sensor.r4s_gate_temperature
    id: r4s_temp
  - platform: homeassistant
    name: "main power"
    entity_id: sensor.dds238_power
    id: main_power

